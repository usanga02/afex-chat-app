{"version":3,"sources":["components/ChannelContainer.jsx","assets/hospital.png","assets/logout.png","components/ChannelListContainer.jsx","assets/AddChannel.js","assets/ChannelInfo.js","assets/CloseCreateChannel.js","assets/InviteIcon.js","assets/SearchIcon.js","components/ChannelSearch.jsx","components/TeamChannelList.jsx","components/TeamChannelPreview.jsx","components/ChannelInner.jsx","components/CreateChannel.jsx","components/EditChannel.jsx","assets/signup.jpg","components/Auth.jsx","components/UserList.jsx","components/ResultsDropdown.jsx","App.jsx","index.js"],"names":["ChannelContainer","isCreating","setIsCreating","isEditing","setIsEditing","createType","className","Channel","EmptyStateIndicator","Message","messageProps","i","MessageTeam","cookies","Cookies","SideBar","logout","src","HospitalIcon","alt","width","onClick","LogoutIcon","CompanyHeader","customChannelTeamFilter","channels","filter","channel","type","customChannelMessagingFilter","ChannelListContent","setCreateType","setToggleContainer","filters","members","$in","useChatContext","client","userID","remove","window","location","reload","ChannelList","channelRenderFilterFn","List","listProps","Preview","previewProps","ChannelListContainer","useState","toggleContainer","style","left","backgroundColor","prevToggleContainer","AddChannel","height","viewBox","fill","xmlns","prevState","d","fillOpacity","ChannelInfo","CloseCreateChannel","InviteIcon","marginLeft","SearchIcon","fillRule","clipRule","ChannelSearch","setActiveChannel","query","setQuery","loading","setLoading","teamChannels","setTeamChannels","directChannels","setDirectChannels","useEffect","getChannels","text","a","channelResponse","queryChannels","name","$autocomplete","userResponse","queryUsers","id","$ne","Promise","all","users","length","placeholder","value","onChange","event","preventDefault","target","setChannel","TeamChannelList","children","error","TeamChannelPreview","activeChannel","ChannelPreview","data","DirectPreview","Object","values","state","user","console","log","Avatar","image","fullName","size","GiphyContext","React","createContext","TeamChannelHeader","watchers","useChannelStateContext","watcher_count","MessagingHeader","additionalMembers","map","display","ChannelInner","giphyState","setGiphyState","sendMessage","useChannelActionContext","Provider","Window","MessageList","MessageInput","overrideSubmitHandler","message","updatedMessage","attachments","mentioned_users","parent_id","parent","Thread","ChannelNameInput","channelName","setChannelName","CreateChannel","selectedUsers","setSelectedUsers","createChannel","e","newChannel","watch","EditChannel","updateChannel","update","addMembers","initialState","username","password","confirmPassword","phoneNumber","avatarURL","Auth","form","setForm","isSignup","setIsSignup","handleChange","handleSubmit","axios","post","token","userId","hashedPassword","set","onSubmit","htmlFor","required","prevIsSignup","signinImage","ListContainer","UserItem","selected","setSelected","prevUsers","prevUser","prevSelected","UserList","setUsers","listEmpty","setListEmpty","setError","getUsers","limit","response","index","channelByUser","member_count","$eq","existingChannel","SearchResult","focusedId","undefined","ResultsDropdown","authToken","get","StreamChat","getInstance","connectUser","App","Chat","theme","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.108d1f7d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Channel, MessageTeam } from 'stream-chat-react';\r\n\r\nimport { ChannelInner, CreateChannel, EditChannel } from './';\r\n\r\nconst ChannelContainer = ({ isCreating, setIsCreating, isEditing, setIsEditing, createType }) => {\r\n    if(isCreating) {\r\n        return (\r\n            <div className=\"channel__container\">\r\n                <CreateChannel createType={createType} setIsCreating={setIsCreating} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if(isEditing) {\r\n        return (\r\n            <div className=\"channel__container\">\r\n                <EditChannel setIsEditing={setIsEditing} />\r\n            </div> \r\n        )\r\n    }\r\n\r\n    const EmptyState = () => (\r\n        <div className=\"channel-empty__container\">\r\n            <p className=\"channel-empty__first\">This is the beginning of your chat history.</p>\r\n            <p className=\"channel-empty__second\">Send messages, attachments, links, emojis, and more!</p>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div className=\" channel__container\">\r\n            <Channel\r\n                EmptyStateIndicator={EmptyState}\r\n                Message={(messageProps, i) => <MessageTeam key={i} {...messageProps} />}\r\n            >\r\n                <ChannelInner setIsEditing={setIsEditing} />\r\n            </Channel>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChannelContainer;\r\n","export default __webpack_public_path__ + \"static/media/hospital.32ee47ae.png\";","export default __webpack_public_path__ + \"static/media/logout.e8e51cf0.png\";","import React, { useState } from \"react\";\r\nimport { ChannelList, useChatContext } from \"stream-chat-react\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nimport { ChannelSearch, TeamChannelList, TeamChannelPreview } from \"./\";\r\nimport HospitalIcon from \"../assets/hospital.png\";\r\nimport LogoutIcon from \"../assets/logout.png\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst SideBar = ({ logout }) => (\r\n  <div className=\"channel-list__sidebar\">\r\n    <div className=\"channel-list__sidebar__icon1\">\r\n      <div className=\"icon1__inner\">\r\n        <img src={HospitalIcon} alt=\"Hospital\" width=\"30\" />\r\n      </div>\r\n    </div>\r\n    <div className=\"channel-list__sidebar__icon2\">\r\n      <div className=\"icon1__inner\" onClick={logout}>\r\n        <img src={LogoutIcon} alt=\"Logout\" width=\"30\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst CompanyHeader = () => (\r\n  <div className=\"channel-list__header\">\r\n    <p className=\"channel-list__header__text\">AFEX Chat App</p>\r\n  </div>\r\n);\r\n\r\nconst customChannelTeamFilter = (channels) => {\r\n  return channels.filter((channel) => channel.type === \"team\");\r\n};\r\n\r\nconst customChannelMessagingFilter = (channels) => {\r\n  return channels.filter((channel) => channel.type === \"messaging\");\r\n};\r\n\r\nconst ChannelListContent = ({\r\n  isCreating,\r\n  setIsCreating,\r\n  setCreateType,\r\n  setIsEditing,\r\n  setToggleContainer,\r\n}) => {\r\n  const { client } = useChatContext();\r\n\r\n  const logout = () => {\r\n    cookies.remove(\"token\");\r\n    cookies.remove(\"userId\");\r\n    cookies.remove(\"username\");\r\n    cookies.remove(\"fullName\");\r\n    cookies.remove(\"avatarURL\");\r\n    cookies.remove(\"hashedPassword\");\r\n    cookies.remove(\"phoneNumber\");\r\n\r\n    window.location.reload();\r\n  };\r\n\r\n  const filters = { members: { $in: [client.userID] } };\r\n\r\n  return (\r\n    <>\r\n      <SideBar logout={logout} />\r\n      <div className=\"channel-list__list__wrapper\">\r\n        <CompanyHeader />\r\n        <ChannelSearch setToggleContainer={setToggleContainer} />\r\n        <ChannelList\r\n          filters={filters}\r\n          channelRenderFilterFn={customChannelTeamFilter}\r\n          List={(listProps) => (\r\n            <TeamChannelList\r\n              {...listProps}\r\n              type=\"team\"\r\n              isCreating={isCreating}\r\n              setIsCreating={setIsCreating}\r\n              setCreateType={setCreateType}\r\n              setIsEditing={setIsEditing}\r\n              setToggleContainer={setToggleContainer}\r\n            />\r\n          )}\r\n          Preview={(previewProps) => (\r\n            <TeamChannelPreview\r\n              {...previewProps}\r\n              setIsCreating={setIsCreating}\r\n              setIsEditing={setIsEditing}\r\n              setToggleContainer={setToggleContainer}\r\n              type=\"team\"\r\n            />\r\n          )}\r\n        />\r\n        <ChannelList\r\n          filters={filters}\r\n          channelRenderFilterFn={customChannelMessagingFilter}\r\n          List={(listProps) => (\r\n            <TeamChannelList\r\n              {...listProps}\r\n              type=\"messaging\"\r\n              isCreating={isCreating}\r\n              setIsCreating={setIsCreating}\r\n              setCreateType={setCreateType}\r\n              setIsEditing={setIsEditing}\r\n              setToggleContainer={setToggleContainer}\r\n            />\r\n          )}\r\n          Preview={(previewProps) => (\r\n            <TeamChannelPreview\r\n              {...previewProps}\r\n              setIsCreating={setIsCreating}\r\n              setIsEditing={setIsEditing}\r\n              setToggleContainer={setToggleContainer}\r\n              type=\"messaging\"\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ChannelListContainer = ({\r\n  setCreateType,\r\n  setIsCreating,\r\n  setIsEditing,\r\n}) => {\r\n  const [toggleContainer, setToggleContainer] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"channel-list__container\">\r\n        <ChannelListContent\r\n          setIsCreating={setIsCreating}\r\n          setCreateType={setCreateType}\r\n          setIsEditing={setIsEditing}\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"channel-list__container-responsive\"\r\n        style={{\r\n          left: toggleContainer ? \"0%\" : \"-89%\",\r\n          backgroundColor: \"#005fff\",\r\n        }}\r\n      >\r\n        <div\r\n          className=\"channel-list__container-toggle\"\r\n          onClick={() =>\r\n            setToggleContainer((prevToggleContainer) => !prevToggleContainer)\r\n          }\r\n        ></div>\r\n        <ChannelListContent\r\n          setIsCreating={setIsCreating}\r\n          setCreateType={setCreateType}\r\n          setIsEditing={setIsEditing}\r\n          setToggleContainer={setToggleContainer}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChannelListContainer;\r\n","import React from 'react';\r\n\r\nexport const AddChannel = ({ setCreateType, setIsCreating, setIsEditing, setToggleContainer, type }) => (\r\n  <svg\r\n    width='14'\r\n    height='14'\r\n    viewBox='0 0 14 14'\r\n    fill='none'\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    onClick={() => {\r\n      setCreateType(type);\r\n      setIsCreating((prevState) => !prevState);\r\n      setIsEditing(false);\r\n      if(setToggleContainer) setToggleContainer((prevState) => !prevState) \r\n    }}\r\n  >\r\n    <path\r\n      d='M7 0C3.13438 0 0 3.13438 0 7C0 10.8656 3.13438 14 7 14C10.8656 14 14 10.8656 14 7C14 3.13438 10.8656 0 7 0ZM11 7.5H7.5V11H6.5V7.5H3V6.5H6.5V3H7.5V6.5H11V7.5Z'\r\n      fill='white'\r\n      fillOpacity='0.66'\r\n    />\r\n  </svg>\r\n);\r\n","import React from 'react';\r\n\r\nexport const ChannelInfo = () => (\r\n  <svg width='18' height='18' viewBox='0 0 18 18' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n    <path\r\n      d='M8.16602 6.49837H9.83269V4.83171H8.16602V6.49837ZM8.99936 15.665C5.32351 15.665 2.33268 12.6743 2.33268 8.99833C2.33268 5.32253 5.32351 2.33171 8.99936 2.33171C12.6752 2.33171 15.666 5.32253 15.666 8.99833C15.666 12.6743 12.6752 15.665 8.99936 15.665ZM8.99936 0.665039C4.39684 0.665039 0.666016 4.39587 0.666016 8.99833C0.666016 13.6009 4.39684 17.3317 8.99936 17.3317C13.6019 17.3317 17.3327 13.6009 17.3327 8.99833C17.3327 4.39587 13.6019 0.665039 8.99936 0.665039ZM8.16602 13.165H9.83269V8.165H8.16602V13.165Z'\r\n      fill='black'\r\n      fillOpacity='0.33'\r\n    />\r\n  </svg>\r\n);\r\n","import React from 'react';\r\n\r\nexport const CloseCreateChannel = ({ setIsCreating, setIsEditing }) => (\r\n  <svg\r\n    width='32'\r\n    height='32'\r\n    viewBox='0 0 32 32'\r\n    fill='none'\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    onClick={() => {\r\n      if (setIsCreating) setIsCreating(false);\r\n      if (setIsEditing) setIsEditing(false);\r\n    }}\r\n  >\r\n    <path\r\n      d='M6.10042 6.10051C0.633603 11.5673 0.633603 20.4327 6.10042 25.8995C11.5672 31.3663 20.4326 31.3663 25.8994 25.8995C31.3662 20.4327 31.3662 11.5673 25.8994 6.10051C20.4326 0.633686 11.5672 0.633685 6.10042 6.10051ZM22.3639 11.0503L17.4141 16L22.3639 20.9497L20.9497 22.364L15.9999 17.4142L11.0502 22.364L9.63596 20.9497L14.5857 16L9.63596 11.0503L11.0502 9.63604L15.9999 14.5858L20.9497 9.63604L22.3639 11.0503Z'\r\n      fill='var(--primary-color)'\r\n    />\r\n  </svg>\r\n);\r\n","import React from 'react';\r\n\r\nexport const InviteIcon = () => (\r\n  <div style={{ marginLeft: '2px' }}>\r\n    <svg width='28' height='28' viewBox='0 0 28 28' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n      <path\r\n        d='M14 0C6.26875 0 0 6.26875 0 14C0 21.7313 6.26875 28 14 28C21.7313 28 28 21.7313 28 14C28 6.26875 21.7313 0 14 0ZM21.1812 9.31875L12.4875 20.475C12.4187 20.5438 12.3062 20.6938 12.1687 20.6938C12.025 20.6938 11.9313 20.5938 11.85 20.5125C11.7688 20.4313 6.91875 15.7687 6.91875 15.7687L6.825 15.675C6.7875 15.6187 6.75625 15.55 6.75625 15.475C6.75625 15.4 6.7875 15.3312 6.825 15.275C6.85 15.25 6.86875 15.2313 6.89375 15.2C7.375 14.6938 8.35 13.6687 8.4125 13.6062C8.49375 13.525 8.5625 13.4187 8.7125 13.4187C8.86875 13.4187 8.96875 13.55 9.04375 13.625C9.11875 13.7 11.8562 16.3312 11.8562 16.3312L18.8125 7.39375C18.875 7.34375 18.95 7.30625 19.0312 7.30625C19.1125 7.30625 19.1875 7.3375 19.25 7.3875L21.1625 8.89375C21.2125 8.95625 21.2437 9.03125 21.2437 9.1125C21.25 9.19375 21.2188 9.2625 21.1812 9.31875Z'\r\n        fill='#1D9D67'\r\n      />\r\n    </svg>\r\n  </div>\r\n);\r\n","import React from 'react';\r\n\r\nexport const SearchIcon = () => (\r\n  <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'>\r\n    <path\r\n      fill='#fff'\r\n      fillOpacity='0.66'\r\n      fillRule='evenodd'\r\n      d='M2.7 6.95a4.25 4.25 0 117.306 2.954 1.001 1.001 0 00-.102.102A4.25 4.25 0 012.7 6.95zm7.906 5.07a6.25 6.25 0 111.414-1.414l2.987 2.987a1 1 0 11-1.414 1.414l-2.987-2.987z'\r\n      clipRule='evenodd'\r\n    ></path>\r\n  </svg>\r\n);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useChatContext } from 'stream-chat-react';\r\n\r\nimport { ResultsDropdown } from './'\r\nimport { SearchIcon } from '../assets';\r\n\r\nconst ChannelSearch = ({ setToggleContainer }) => {\r\n    const { client, setActiveChannel } = useChatContext();\r\n    const [query, setQuery] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [teamChannels, setTeamChannels] = useState([])\r\n    const [directChannels, setDirectChannels] = useState([])\r\n\r\n    useEffect(() => {\r\n        if(!query) {\r\n            setTeamChannels([]);\r\n            setDirectChannels([]);\r\n        }\r\n    }, [query])\r\n\r\n    const getChannels = async (text) => {\r\n        try {\r\n            const channelResponse = client.queryChannels({\r\n                type: 'team', \r\n                name: { $autocomplete: text }, \r\n                members: { $in: [client.userID]}\r\n            });\r\n            const userResponse = client.queryUsers({\r\n                id: { $ne: client.userID },\r\n                name: { $autocomplete: text }\r\n            })\r\n\r\n            const [channels, { users }] = await Promise.all([channelResponse, userResponse]);\r\n\r\n            if(channels.length) setTeamChannels(channels);\r\n            if(users.length) setDirectChannels(users);\r\n        } catch (error) {\r\n            setQuery('')\r\n        }\r\n    }\r\n\r\n    const onSearch = (event) => {\r\n        event.preventDefault();\r\n\r\n        setLoading(true);\r\n        setQuery(event.target.value);\r\n        getChannels(event.target.value)\r\n    }\r\n\r\n    const setChannel = (channel) => {\r\n        setQuery('');\r\n        setActiveChannel(channel);\r\n    }\r\n\r\n    return (\r\n        <div className=\"channel-search__container\">\r\n            <div className=\"channel-search__input__wrapper\">\r\n                <div className=\"channel-serach__input__icon\">\r\n                    <SearchIcon />\r\n                </div>\r\n                <input \r\n                    className=\"channel-search__input__text\" \r\n                    placeholder=\"Search\" \r\n                    type=\"text\" \r\n                    value={query}  \r\n                    onChange={onSearch}\r\n                />\r\n            </div>\r\n            { query && (\r\n                <ResultsDropdown \r\n                    teamChannels={teamChannels}\r\n                    directChannels={directChannels}\r\n                    loading={loading}\r\n                    setChannel={setChannel}\r\n                    setQuery={setQuery}\r\n                    setToggleContainer={setToggleContainer}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChannelSearch\r\n","import React from 'react';\r\n\r\nimport { AddChannel } from '../assets';\r\n\r\nconst TeamChannelList = ({ setToggleContainer, children, error = false, loading, type, isCreating, setIsCreating, setCreateType, setIsEditing }) => {\r\n    if(error) {\r\n        return type === 'team' ? (\r\n            <div className=\"team-channel-list\">\r\n                <p className=\"team-channel-list__message\">\r\n                    Connection error, please wait a moment and try again.\r\n                </p>\r\n            </div>\r\n        ) : null\r\n    }\r\n\r\n    if(loading) {\r\n        return (\r\n            <div className=\"team-channel-list\">\r\n                <p className=\"team-channel-list__message loading\">\r\n                    {type === 'team' ? 'Channels' : 'Messages'} loading...\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"team-channel-list\">\r\n            <div className=\"team-channel-list__header\">\r\n                <p className=\"team-channel-list__header__title\">\r\n                    {type === 'team' ? 'Channels' : 'Direct Messages'}\r\n                </p>\r\n                <AddChannel \r\n                    isCreating={isCreating}\r\n                    setIsCreating={setIsCreating}\r\n                    setCreateType={setCreateType} \r\n                    setIsEditing={setIsEditing}\r\n                    type={type === 'team' ? 'team' : 'messaging'}\r\n                    setToggleContainer={setToggleContainer}\r\n                />\r\n            </div>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamChannelList\r\n","import React from 'react';\r\nimport { Avatar, useChatContext } from 'stream-chat-react';\r\n\r\nconst TeamChannelPreview = ({ setActiveChannel, setIsCreating, setIsEditing, setToggleContainer, channel, type }) => {\r\n    const { channel: activeChannel, client } = useChatContext();\r\n\r\n    const ChannelPreview = () => (\r\n        <p className=\"channel-preview__item\">\r\n            # {channel?.data?.name || channel?.data?.id}\r\n        </p>\r\n    );\r\n\r\n\r\n    const DirectPreview = () => {\r\n        const members = Object.values(channel.state.members).filter(({ user }) => user.id !== client.userID);\r\n    \r\n        console.log(members[0]);\r\n\r\n        return (\r\n            <div className=\"channel-preview__item single\">\r\n                <Avatar \r\n                    image={members[0]?.user?.image}\r\n                    name={members[0]?.user?.fullName || members[0]?.user?.id}\r\n                    size={24}\r\n                />\r\n                <p>{members[0]?.user?.fullName || members[0]?.user?.id}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={\r\n            channel?.id === activeChannel?.id\r\n                ? 'channel-preview__wrapper__selected'\r\n                : 'channel-preview__wrapper'\r\n        }\r\n        onClick={() => {\r\n            setIsCreating(false);\r\n            setIsEditing(false);\r\n            setActiveChannel(channel);\r\n            if(setToggleContainer) {\r\n                setToggleContainer((prevState) => !prevState)\r\n            }\r\n        }}\r\n        >\r\n            {type === 'team' ? <ChannelPreview /> : <DirectPreview />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TeamChannelPreview\r\n","import React, { useState } from 'react';\r\nimport { MessageList, MessageInput, Thread, Window, useChannelActionContext, Avatar, useChannelStateContext, useChatContext } from 'stream-chat-react';\r\n\r\nimport { ChannelInfo } from '../assets';\r\n\r\nexport const GiphyContext = React.createContext({});\r\n\r\nconst ChannelInner = ({ setIsEditing }) => {\r\n  const [giphyState, setGiphyState] = useState(false);\r\n  const { sendMessage } = useChannelActionContext();\r\n  \r\n  const overrideSubmitHandler = (message) => {\r\n    let updatedMessage = {\r\n      attachments: message.attachments,\r\n      mentioned_users: message.mentioned_users,\r\n      parent_id: message.parent?.id,\r\n      parent: message.parent,\r\n      text: message.text,\r\n    };\r\n    \r\n    if (giphyState) {\r\n      updatedMessage = { ...updatedMessage, text: `/giphy ${message.text}` };\r\n    }\r\n    \r\n    if (sendMessage) {\r\n      sendMessage(updatedMessage);\r\n      setGiphyState(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GiphyContext.Provider value={{ giphyState, setGiphyState }}>\r\n      <div style={{ display: 'flex', width: '100%' }}>\r\n        <Window>\r\n          <TeamChannelHeader setIsEditing={setIsEditing} />\r\n          <MessageList />\r\n          <MessageInput overrideSubmitHandler={overrideSubmitHandler} />\r\n        </Window>\r\n        <Thread />\r\n      </div>\r\n    </GiphyContext.Provider>\r\n  );\r\n};\r\n\r\nconst TeamChannelHeader = ({ setIsEditing }) => {\r\n    const { channel, watcher_count } = useChannelStateContext();\r\n    const { client } = useChatContext();\r\n  \r\n    const MessagingHeader = () => {\r\n      const members = Object.values(channel.state.members).filter(({ user }) => user.id !== client.userID);\r\n      const additionalMembers = members.length - 3;\r\n  \r\n      if(channel.type === 'messaging') {\r\n        return (\r\n          <div className='team-channel-header__name-wrapper'>\r\n            {members.map(({ user }, i) => (\r\n              <div key={i} className='team-channel-header__name-multi'>\r\n                <Avatar image={user.image} name={user.fullName || user.id} size={32} />\r\n                <p className='team-channel-header__name user'>{user.fullName || user.id}</p>\r\n              </div>\r\n            ))}\r\n  \r\n            {additionalMembers > 0 && <p className='team-channel-header__name user'>and {additionalMembers} more</p>}\r\n          </div>\r\n        );\r\n      }\r\n  \r\n      return (\r\n        <div className='team-channel-header__channel-wrapper'>\r\n          <p className='team-channel-header__name'># {channel.data.name}</p>\r\n          <span style={{ display: 'flex' }} onClick={() => setIsEditing(true)}>\r\n            <ChannelInfo />\r\n          </span>\r\n        </div>\r\n      );\r\n    };\r\n  \r\n    const getWatcherText = (watchers) => {\r\n      if (!watchers) return 'No users online';\r\n      if (watchers === 1) return '1 user online';\r\n      return `${watchers} users online`;\r\n    };\r\n  \r\n    return (\r\n      <div className='team-channel-header__container'>\r\n        <MessagingHeader />\r\n        <div className='team-channel-header__right'>\r\n          <p className='team-channel-header__right-text'>{getWatcherText(watcher_count)}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default ChannelInner;\r\n","import React, { useState } from 'react';\r\nimport { useChatContext } from 'stream-chat-react';\r\n\r\nimport { UserList } from './';\r\nimport { CloseCreateChannel } from '../assets';\r\n\r\nconst ChannelNameInput = ({ channelName = '', setChannelName }) => {\r\n    const handleChange = (event) => {\r\n        event.preventDefault();\r\n\r\n        setChannelName(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"channel-name-input__wrapper\">\r\n            <p>Name</p>\r\n            <input value={channelName} onChange={handleChange} placeholder=\"channel-name\" />\r\n            <p>Add Members</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CreateChannel = ({ createType, setIsCreating }) => {\r\n    const { client, setActiveChannel } = useChatContext();\r\n    const [selectedUsers, setSelectedUsers] = useState([client.userID || ''])\r\n    const [channelName, setChannelName] = useState('');\r\n\r\n    const createChannel = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const newChannel = await client.channel(createType, channelName, {\r\n                name: channelName, members: selectedUsers\r\n            });\r\n\r\n            await newChannel.watch();\r\n\r\n            setChannelName('');\r\n            setIsCreating(false);\r\n            setSelectedUsers([client.userID]);\r\n            setActiveChannel(newChannel);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"create-channel__container\">\r\n            <div className=\"create-channel__header\">\r\n                <p>{createType === 'team' ? 'Create a New Channel' : 'Send a Direct Message'}</p>\r\n                <CloseCreateChannel setIsCreating={setIsCreating} />\r\n            </div>\r\n            {createType === 'team' && <ChannelNameInput channelName={channelName} setChannelName={setChannelName}/>}\r\n            <UserList setSelectedUsers={setSelectedUsers} />\r\n            <div className=\"create-channel__button-wrapper\" onClick={createChannel}>\r\n                <p>{createType === 'team' ? 'Create Channel' : 'Create Message Group'}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateChannel\r\n","import React, { useState } from 'react';\r\nimport { useChatContext } from 'stream-chat-react';\r\n\r\nimport { UserList } from './';\r\nimport { CloseCreateChannel } from '../assets';\r\n\r\nconst ChannelNameInput = ({ channelName = '', setChannelName }) => {\r\n    const handleChange = (event) => {\r\n        event.preventDefault();\r\n\r\n        setChannelName(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"channel-name-input__wrapper\">\r\n            <p>Name</p>\r\n            <input value={channelName} onChange={handleChange} placeholder=\"channel-name\" />\r\n            <p>Add Members</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst EditChannel = ({ setIsEditing }) => {\r\n    const { channel } = useChatContext();\r\n    const [channelName, setChannelName] = useState(channel?.data?.name);\r\n    const [selectedUsers, setSelectedUsers] = useState([])\r\n\r\n    const updateChannel = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const nameChanged = channelName !== (channel.data.name || channel.data.id);\r\n\r\n        if(nameChanged) {\r\n            await channel.update({ name: channelName }, { text: `Channel name changed to ${channelName}`});\r\n        }\r\n\r\n        if(selectedUsers.length) {\r\n            await channel.addMembers(selectedUsers);\r\n        }\r\n\r\n        setChannelName(null);\r\n        setIsEditing(false);\r\n        setSelectedUsers([]);\r\n    }\r\n\r\n    return (\r\n        <div className=\"edit-channel__container\">\r\n            <div className=\"edit-channel__header\">\r\n                <p>Edit Channel</p>\r\n                <CloseCreateChannel setIsEditing={setIsEditing} />\r\n            </div>\r\n            <ChannelNameInput channelName={channelName} setChannelName={setChannelName} />\r\n            <UserList setSelectedUsers={setSelectedUsers} />\r\n            <div className=\"edit-channel__button-wrapper\" onClick={updateChannel}>\r\n                <p>Save Changes</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditChannel\r\n","export default __webpack_public_path__ + \"static/media/signup.cefd3aa6.jpg\";","import React, { useState } from \"react\";\r\nimport Cookies from \"universal-cookie\";\r\nimport axios from \"axios\";\r\n\r\nimport signinImage from \"../assets/signup.jpg\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst initialState = {\r\n  fullName: \"\",\r\n  username: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n  phoneNumber: \"\",\r\n  avatarURL: \"\",\r\n};\r\n\r\nconst Auth = () => {\r\n  const [form, setForm] = useState(initialState);\r\n  const [isSignup, setIsSignup] = useState(true);\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { username, password, phoneNumber, avatarURL } = form;\r\n\r\n    const URL = \"http://localhost:5000/auth\";\r\n\r\n    const {\r\n      data: { token, userId, hashedPassword, fullName },\r\n    } = await axios.post(`${URL}/${isSignup ? \"signup\" : \"login\"}`, {\r\n      username,\r\n      password,\r\n      fullName: form.fullName,\r\n      phoneNumber,\r\n      avatarURL,\r\n    });\r\n\r\n    cookies.set(\"token\", token);\r\n    cookies.set(\"username\", username);\r\n    cookies.set(\"fullName\", fullName);\r\n    cookies.set(\"userId\", userId);\r\n\r\n    if (isSignup) {\r\n      cookies.set(\"phoneNumber\", phoneNumber);\r\n      cookies.set(\"avatarURL\", avatarURL);\r\n      cookies.set(\"hashedPassword\", hashedPassword);\r\n    }\r\n\r\n    window.location.reload();\r\n  };\r\n\r\n  const switchMode = () => {\r\n    setIsSignup((prevIsSignup) => !prevIsSignup);\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth__form-container\">\r\n      <div className=\"auth__form-container_fields\">\r\n        <div className=\"auth__form-container_fields-content\">\r\n          <p>{isSignup ? \"Sign Up\" : \"Sign In\"}</p>\r\n          <form onSubmit={handleSubmit}>\r\n            {isSignup && (\r\n              <div className=\"auth__form-container_fields-content_input\">\r\n                <label htmlFor=\"fullName\">Full Name</label>\r\n                <input\r\n                  name=\"fullName\"\r\n                  type=\"text\"\r\n                  placeholder=\"Full Name\"\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n            )}\r\n            <div className=\"auth__form-container_fields-content_input\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <input\r\n                name=\"username\"\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            {isSignup && (\r\n              <div className=\"auth__form-container_fields-content_input\">\r\n                <label htmlFor=\"phoneNumber\">Phone Number</label>\r\n                <input\r\n                  name=\"phoneNumber\"\r\n                  type=\"text\"\r\n                  placeholder=\"Phone Number\"\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n            )}\r\n            {isSignup && (\r\n              <div className=\"auth__form-container_fields-content_input\">\r\n                <label htmlFor=\"avatarURL\">Avatar URL</label>\r\n                <input\r\n                  name=\"avatarURL\"\r\n                  type=\"text\"\r\n                  placeholder=\"Avatar URL\"\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n            )}\r\n            <div className=\"auth__form-container_fields-content_input\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            {isSignup && (\r\n              <div className=\"auth__form-container_fields-content_input\">\r\n                <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                <input\r\n                  name=\"confirmPassword\"\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm Password\"\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n            )}\r\n            <div className=\"auth__form-container_fields-content_button\">\r\n              <button>{isSignup ? \"Sign Up\" : \"Sign In\"}</button>\r\n            </div>\r\n          </form>\r\n          <div className=\"auth__form-container_fields-account\">\r\n            <p>\r\n              {isSignup\r\n                ? \"Already have an account? \"\r\n                : \"Don't have an account? \"}\r\n              <span onClick={switchMode}>\r\n                {isSignup ? \"Sign In\" : \"Sign Up\"}\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"auth__form-container_image\">\r\n        <img src={signinImage} alt=\"sign in\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Avatar, useChatContext } from 'stream-chat-react';\r\n\r\nimport { InviteIcon } from '../assets';\r\n\r\nconst ListContainer = ({ children }) => {\r\n    return (\r\n        <div className=\"user-list__container\">\r\n            <div className=\"user-list__header\">\r\n                <p>User</p>\r\n                <p>Invite</p>\r\n            </div>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst UserItem = ({ user, setSelectedUsers }) => {\r\n    const [selected, setSelected] = useState(false)\r\n\r\n    const handleSelect = () => {\r\n        if(selected) {\r\n            setSelectedUsers((prevUsers) => prevUsers.filter((prevUser) => prevUser !== user.id))\r\n        } else {\r\n            setSelectedUsers((prevUsers) => [...prevUsers, user.id])\r\n        }\r\n\r\n        setSelected((prevSelected) => !prevSelected)\r\n    }\r\n\r\n    return (\r\n        <div className=\"user-item__wrapper\" onClick={handleSelect}>\r\n            <div className=\"user-item__name-wrapper\">\r\n                <Avatar image={user.image} name={user.fullName || user.id} size={32} />\r\n                <p className=\"user-item__name\">{user.fullName || user.id}</p>\r\n            </div>\r\n            {selected ? <InviteIcon /> : <div className=\"user-item__invite-empty\" />}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst UserList = ({ setSelectedUsers }) => {\r\n    const { client } = useChatContext();\r\n    const [users, setUsers] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [listEmpty, setListEmpty] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const getUsers = async () => {\r\n            if(loading) return;\r\n\r\n            setLoading(true);\r\n            \r\n            try {\r\n                const response = await client.queryUsers(\r\n                    { id: { $ne: client.userID } },\r\n                    { id: 1 },\r\n                    { limit: 8 } \r\n                );\r\n\r\n                if(response.users.length) {\r\n                    setUsers(response.users);\r\n                } else {\r\n                    setListEmpty(true);\r\n                }\r\n            } catch (error) {\r\n               setError(true);\r\n            }\r\n            setLoading(false);\r\n        }\r\n\r\n        if(client) getUsers()\r\n    }, []);\r\n\r\n    if(error) {\r\n        return (\r\n            <ListContainer>\r\n                <div className=\"user-list__message\">\r\n                    Error loading, please refresh and try again.\r\n                </div>\r\n            </ListContainer>\r\n        )\r\n    }\r\n\r\n    if(listEmpty) {\r\n        return (\r\n            <ListContainer>\r\n                <div className=\"user-list__message\">\r\n                    No users found.\r\n                </div>\r\n            </ListContainer>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <ListContainer>\r\n            {loading ? <div className=\"user-list__message\">\r\n                Loading users...\r\n            </div> : (\r\n                users?.map((user, i) => (\r\n                  <UserItem index={i} key={user.id} user={user} setSelectedUsers={setSelectedUsers} />  \r\n                ))\r\n            )}\r\n        </ListContainer>\r\n    )\r\n}\r\n\r\nexport default UserList;","import React from 'react';\r\nimport { Avatar, useChatContext } from 'stream-chat-react';\r\n\r\nconst channelByUser = async ({ client, setActiveChannel, channel, setChannel }) => {\r\n  const filters = {\r\n    type: 'messaging',\r\n    member_count: 2,\r\n    members: { $eq: [client.user.id, client.userID] },\r\n  };\r\n\r\n  const [existingChannel] = await client.queryChannels(filters);\r\n\r\n  if (existingChannel) return setActiveChannel(existingChannel);\r\n\r\n  const newChannel = client.channel('messaging', { members: [channel.id, client.userID] });\r\n  \r\n  setChannel(newChannel)\r\n\r\n  return setActiveChannel(newChannel);\r\n};\r\n\r\nconst SearchResult = ({ channel, focusedId, type, setChannel, setToggleContainer }) => {\r\n  const { client, setActiveChannel } = useChatContext();\r\n\r\n  if (type === 'channel') {\r\n    return (\r\n      <div\r\n        onClick={() => {\r\n          setChannel(channel)\r\n          if(setToggleContainer) {\r\n            setToggleContainer((prevState) => !prevState)   \r\n          }\r\n        }}\r\n        className={focusedId === channel.id ? 'channel-search__result-container__focused' : 'channel-search__result-container' }\r\n      >\r\n        <div className='result-hashtag'>#</div>\r\n        <p className='channel-search__result-text'>{channel.data.name}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onClick={async () => {\r\n        channelByUser({ client, setActiveChannel, channel, setChannel })\r\n        if(setToggleContainer) {\r\n            setToggleContainer((prevState) => !prevState)   \r\n        }\r\n      }}\r\n      className={focusedId === channel.id ? 'channel-search__result-container__focused' : 'channel-search__result-container' }\r\n    >\r\n      <div className='channel-search__result-user'>\r\n        <Avatar image={channel.image || undefined} name={channel.name} size={24} />\r\n        <p className='channel-search__result-text'>{channel.name}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ResultsDropdown = ({ teamChannels, directChannels, focusedId, loading, setChannel, setToggleContainer }) => {\r\n\r\n  return (\r\n    <div className='channel-search__results'>\r\n      <p className='channel-search__results-header'>Channels</p>\r\n      {loading && !teamChannels.length && (\r\n        <p className='channel-search__results-header'>\r\n          <i>Loading...</i>\r\n        </p>\r\n      )}\r\n      {!loading && !teamChannels.length ? (\r\n        <p className='channel-search__results-header'>\r\n          <i>No channels found</i>\r\n        </p>\r\n      ) : (\r\n        teamChannels?.map((channel, i) => (\r\n          <SearchResult\r\n            channel={channel}\r\n            focusedId={focusedId}\r\n            key={i}\r\n            setChannel={setChannel}\r\n            type='channel'\r\n            setToggleContainer={setToggleContainer}\r\n          />\r\n        ))\r\n      )}\r\n      <p className='channel-search__results-header'>Users</p>\r\n      {loading && !directChannels.length && (\r\n        <p className='channel-search__results-header'>\r\n          <i>Loading...</i>\r\n        </p>\r\n      )}\r\n      {!loading && !directChannels.length ? (\r\n        <p className='channel-search__res ults-header'>\r\n          <i>No direct messages found</i>\r\n        </p>\r\n      ) : (\r\n        directChannels?.map((channel, i) => (\r\n          <SearchResult\r\n            channel={channel}\r\n            focusedId={focusedId}\r\n            key={i}\r\n            setChannel={setChannel}\r\n            type='user'\r\n            setToggleContainer={setToggleContainer}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultsDropdown;","import React, { useState } from \"react\";\r\nimport { StreamChat } from \"stream-chat\";\r\nimport { Chat } from \"stream-chat-react\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nimport { ChannelListContainer, ChannelContainer, Auth } from \"./components\";\r\n\r\nimport \"stream-chat-react/dist/css/index.css\";\r\nimport \"./App.css\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst apiKey = \"svqus6hp3ch9\";\r\nconst authToken = cookies.get(\"token\");\r\n\r\nconst client = StreamChat.getInstance(apiKey);\r\n\r\nif (authToken) {\r\n  client.connectUser(\r\n    {\r\n      id: cookies.get(\"userId\"),\r\n      name: cookies.get(\"username\"),\r\n      fullName: cookies.get(\"fullName\"),\r\n      image: cookies.get(\"avatarURL\"),\r\n      hashedPassword: cookies.get(\"hashedPassword\"),\r\n      phoneNumber: cookies.get(\"phoneNumber\"),\r\n    },\r\n    authToken\r\n  );\r\n}\r\n\r\nconst App = () => {\r\n  const [createType, setCreateType] = useState(\"\");\r\n  const [isCreating, setIsCreating] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  if (!authToken) return <Auth />;\r\n\r\n  return (\r\n    <div className=\"app__wrapper\">\r\n      <Chat client={client} theme=\"team light\">\r\n        <ChannelListContainer\r\n          isCreating={isCreating}\r\n          setIsCreating={setIsCreating}\r\n          setCreateType={setCreateType}\r\n          setIsEditing={setIsEditing}\r\n        />\r\n        <ChannelContainer\r\n          isCreating={isCreating}\r\n          setIsCreating={setIsCreating}\r\n          isEditing={isEditing}\r\n          setIsEditing={setIsEditing}\r\n          createType={createType}\r\n        />\r\n      </Chat>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}